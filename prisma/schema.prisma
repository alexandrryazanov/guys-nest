// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//--------------------------------------
model User {
  id             String        @id @default(uuid())
  email          String        @unique
  hashedPassword String
  salt           String
  transactions   Transaction[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Transaction {
  id          String    @id @default(uuid())
  date        DateTime
  name        String
  description String?
  amount      Decimal
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  bank        Bank?     @relation(fields: [bankId], references: [id])
  bankId      String?
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  String?
  tags        Tag[]
  supplier    Supplier? @relation(fields: [supplierId], references: [id])
  supplierId  String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Bank {
  id           String        @id @default(uuid())
  name         String
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

// TODO: create included categories
model Category {
  id           String        @id @default(uuid())
  name         String
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Tag {
  id           String        @id @default(uuid())
  name         String        @unique
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Supplier {
  id           String        @id @default(uuid())
  name         String
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}
